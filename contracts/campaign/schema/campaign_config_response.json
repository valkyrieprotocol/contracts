{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CampaignConfigResponse",
  "type": "object",
  "required": [
    "admin",
    "campaign_manager",
    "created_at",
    "creator",
    "deposit_amount",
    "deposit_lock_period",
    "description",
    "governance",
    "parameter_key",
    "title",
    "url",
    "vp_burn_amount",
    "vp_token"
  ],
  "properties": {
    "admin": {
      "type": "string"
    },
    "campaign_manager": {
      "type": "string"
    },
    "created_at": {
      "$ref": "#/definitions/Timestamp"
    },
    "creator": {
      "type": "string"
    },
    "deposit_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "deposit_denom": {
      "anyOf": [
        {
          "$ref": "#/definitions/Denom"
        },
        {
          "type": "null"
        }
      ]
    },
    "deposit_lock_period": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "description": {
      "type": "string"
    },
    "governance": {
      "type": "string"
    },
    "parameter_key": {
      "type": "string"
    },
    "qualification_description": {
      "type": [
        "string",
        "null"
      ]
    },
    "qualifier": {
      "type": [
        "string",
        "null"
      ]
    },
    "title": {
      "type": "string"
    },
    "url": {
      "type": "string"
    },
    "vp_burn_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "vp_token": {
      "type": "string"
    }
  },
  "definitions": {
    "Denom": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "native"
          ],
          "properties": {
            "native": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Timestamp": {
      "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
      "allOf": [
        {
          "$ref": "#/definitions/Uint64"
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    }
  }
}
